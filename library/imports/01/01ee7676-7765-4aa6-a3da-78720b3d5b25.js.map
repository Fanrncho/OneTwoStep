{"version":3,"sources":["../../../../../assets/game/script/assets/game/script/roadManager.js"],"names":["GLB","require","cc","Class","extends","Component","properties","stonePrefab","default","type","Prefab","offsetX","offsetY","stoneSpeed","accDurTime","speedUpPercent","waterBG","Node","deadLine","introduction","onLoad","Game","RoadManager","roadId","roadDatas","curLeftAccTime","roadPool","NodePool","spawnTriggerDis","stones","on","EventType","TOUCH_START","onClickWater","deadLineAnim","getComponent","Animation","removeFromParent","bind","initRoad","i","spawnStone","deadLineWarn","animState","getAnimationState","defaultClip","name","isPlaying","play","event","GameManager","gameState","GameState","Play","position","node","convertToNodeSpaceAR","getLocation","player","PlayerManager","y","data","find","temp","ID","jumpRecordId","targetRow","minDistance","Number","MAX_VALUE","row","x","distance","Math","abs","fakeData","line","isDown","jumpPos","push","msg","action","PLAYER_STEP_DATA","sendEvent","spawnStoneNotify","stone","get","instantiate","parent","setSiblingIndex","stoneComponent","init","isRoomOwner","dataFunc","randomNum","ROAD_DATA","sendEventEx","recycleStone","obj","put","speedUp","deadSlowdown","update","dt","moveDis","shift"],"mappings":"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","file":"roadManager.js","sourceRoot":"../../../../../assets/game/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\nvar GLB = require(\"Glb\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        stonePrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        offsetX: 0, // 石块X偏移\n        offsetY: 0, // 石块Y偏移\n\n        stoneSpeed: 0, // 石头速度--\n        accDurTime: 10, // 加速间隔时间--\n        speedUpPercent: 1.1, // 加速比\n        waterBG: cc.Node,\n        deadLine: cc.Node,\n        introduction: cc.Node\n    },\n\n    onLoad() {\n        Game.RoadManager = this;\n        this.roadId = 0;\n        this.roadDatas = [];\n        this.curLeftAccTime = this.accDurTime;\n        this.roadPool = new cc.NodePool();\n        this.spawnTriggerDis = 3 * this.offsetY;\n        this.stones = [];\n\n        this.waterBG.on(cc.Node.EventType.TOUCH_START, this.onClickWater, this);\n        this.deadLineAnim = this.deadLine.getComponent(cc.Animation);\n        this.introduction.getComponent(cc.Animation).on(\"finished\",function(){\n            this.introduction.removeFromParent();\n        }.bind(this));\n\n    },\n\n    initRoad() {\n        for (var i = 0; i < 25; i++) {\n            this.spawnStone();\n        }\n    },\n\n    deadLineWarn: function() {\n        var animState = this.deadLineAnim.getAnimationState(this.deadLineAnim.defaultClip.name);\n        if (!animState.isPlaying) {\n            this.deadLineAnim.play();\n        }\n    },\n\n    onClickWater: function(event) {\n        if (Game.GameManager.gameState !== GameState.Play) {\n            return;\n        }\n        var position = this.node.convertToNodeSpaceAR(event.getLocation());\n        var player = Game.PlayerManager.player;\n        if (position.y < player.node.y + (this.offsetX / 2)) {\n            return;\n        }\n\n        var data = Game.RoadManager.roadDatas.find(function(temp) {\n            return temp.ID === player.jumpRecordId;\n        }.bind(this));\n\n        var targetRow = 0;\n        var minDistance = Number.MAX_VALUE;\n        for (var i = 1; i <= 4; i++) {\n            if (i !== data.row) {\n                var x = this.offsetX * (i - 1);\n                var distance = Math.abs(position.x - x);\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    targetRow = i;\n                }\n            }\n        }\n\n        var fakeData = {\n            ID: 0,\n            line: data.line,\n            row: targetRow,\n            isDown: true\n        };\n        Game.PlayerManager.player.jumpPos.push(fakeData);\n\n        var msg = {\n            action: GLB.PLAYER_STEP_DATA,\n            data: fakeData\n        };\n        Game.GameManager.sendEvent(msg);\n    },\n\n    spawnStoneNotify: function(data) {\n        this.roadDatas.push(data);\n        var stone = this.roadPool.get();\n        if (!stone) {\n            stone = cc.instantiate(this.stonePrefab);\n        }\n        stone.parent = this.node;\n        stone.x = this.offsetX * (data.row - 1);\n        stone.y = this.offsetY * (data.line - 1);\n\n        stone.setSiblingIndex(0);\n        var stoneComponent = stone.getComponent(\"stone\");\n        stoneComponent.init(data);\n        this.stones.push(stone);\n    },\n\n    spawnStone: function() {\n        this.roadId++;\n        if (GLB.isRoomOwner) {\n            var data = {\n                ID: this.roadId,\n                line: this.roadId + 1,\n                row: dataFunc.randomNum(1, 4)\n            }\n            var msg = {\n                action: GLB.ROAD_DATA,\n                data: data\n            };\n            Game.GameManager.sendEventEx(msg);\n        }\n    },\n\n    recycleStone: function(obj) {\n        this.roadPool.put(obj);\n        this.spawnStone();\n    },\n\n    speedUp: function() {\n        this.stoneSpeed *= this.speedUpPercent;\n    },\n\n    deadSlowdown: function() {\n        this.stoneSpeed *= 0.75;\n    },\n\n    update(dt) {\n        if (Game.GameManager.gameState !== GameState.Play) {\n            return;\n        }\n        this.curLeftAccTime -= dt;\n        if (this.curLeftAccTime < 0) {\n            this.curLeftAccTime = this.accDurTime;\n            this.speedUp();\n            Game.PlayerManager.player.speedUp();\n        }\n        var moveDis = this.stoneSpeed * dt;\n        this.node.y -= moveDis;\n        this.spawnTriggerDis -= moveDis;\n        if (this.spawnTriggerDis < 0) {\n            this.spawnTriggerDis = this.offsetY;\n            this.spawnStone();\n            var stone = this.stones.shift();\n            if (stone) {\n                this.recycleStone(stone);\n            }\n        }\n    },\n});\n"]}